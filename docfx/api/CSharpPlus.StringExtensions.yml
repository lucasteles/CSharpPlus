### YamlMime:ManagedReference
items:
- uid: CSharpPlus.StringExtensions
  commentId: T:CSharpPlus.StringExtensions
  id: StringExtensions
  parent: CSharpPlus
  children:
  - CSharpPlus.StringExtensions.GetStableHashCode(System.String)
  - CSharpPlus.StringExtensions.IsNullOrEmpty(System.String)
  - CSharpPlus.StringExtensions.IsNullOrWhiteSpace(System.String)
  - CSharpPlus.StringExtensions.RemoveNonDigit(System.String)
  - CSharpPlus.StringExtensions.RemoveNonDigitOrLetter(System.String)
  langs:
  - csharp
  - vb
  name: StringExtensions
  nameWithType: StringExtensions
  fullName: CSharpPlus.StringExtensions
  type: Class
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/StringExtensions.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: String extensions
  example: []
  syntax:
    content: public static class StringExtensions
    content.vb: Public Module StringExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: CSharpPlus.StringExtensions.IsNullOrEmpty(System.String)
  commentId: M:CSharpPlus.StringExtensions.IsNullOrEmpty(System.String)
  id: IsNullOrEmpty(System.String)
  isExtensionMethod: true
  parent: CSharpPlus.StringExtensions
  langs:
  - csharp
  - vb
  name: IsNullOrEmpty(string?)
  nameWithType: StringExtensions.IsNullOrEmpty(string?)
  fullName: CSharpPlus.StringExtensions.IsNullOrEmpty(string?)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/StringExtensions.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Indicates whether the specified string is null or an empty string ("").
  example: []
  syntax:
    content: public static bool IsNullOrEmpty(this string? value)
    parameters:
    - id: value
      type: System.String
      description: The string to test
    return:
      type: System.Boolean
      description: true if the value parameter is null or an empty string (""); otherwise, false.
    content.vb: Public Shared Function IsNullOrEmpty(value As String) As Boolean
  overload: CSharpPlus.StringExtensions.IsNullOrEmpty*
  nameWithType.vb: StringExtensions.IsNullOrEmpty(String)
  fullName.vb: CSharpPlus.StringExtensions.IsNullOrEmpty(String)
  name.vb: IsNullOrEmpty(String)
- uid: CSharpPlus.StringExtensions.IsNullOrWhiteSpace(System.String)
  commentId: M:CSharpPlus.StringExtensions.IsNullOrWhiteSpace(System.String)
  id: IsNullOrWhiteSpace(System.String)
  isExtensionMethod: true
  parent: CSharpPlus.StringExtensions
  langs:
  - csharp
  - vb
  name: IsNullOrWhiteSpace(string?)
  nameWithType: StringExtensions.IsNullOrWhiteSpace(string?)
  fullName: CSharpPlus.StringExtensions.IsNullOrWhiteSpace(string?)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/StringExtensions.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Indicates whether a specified string is null, empty, or consists only of white-space characters.
  example: []
  syntax:
    content: public static bool IsNullOrWhiteSpace(this string? value)
    parameters:
    - id: value
      type: System.String
      description: The string to test.
    return:
      type: System.Boolean
      description: true if the value parameter is null or Empty, or if value consists exclusively of white-space characters.
    content.vb: Public Shared Function IsNullOrWhiteSpace(value As String) As Boolean
  overload: CSharpPlus.StringExtensions.IsNullOrWhiteSpace*
  nameWithType.vb: StringExtensions.IsNullOrWhiteSpace(String)
  fullName.vb: CSharpPlus.StringExtensions.IsNullOrWhiteSpace(String)
  name.vb: IsNullOrWhiteSpace(String)
- uid: CSharpPlus.StringExtensions.RemoveNonDigit(System.String)
  commentId: M:CSharpPlus.StringExtensions.RemoveNonDigit(System.String)
  id: RemoveNonDigit(System.String)
  isExtensionMethod: true
  parent: CSharpPlus.StringExtensions
  langs:
  - csharp
  - vb
  name: RemoveNonDigit(string)
  nameWithType: StringExtensions.RemoveNonDigit(string)
  fullName: CSharpPlus.StringExtensions.RemoveNonDigit(string)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/StringExtensions.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Remove all non-digits characters
  example: []
  syntax:
    content: public static string RemoveNonDigit(this string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function RemoveNonDigit(value As String) As String
  overload: CSharpPlus.StringExtensions.RemoveNonDigit*
  nameWithType.vb: StringExtensions.RemoveNonDigit(String)
  fullName.vb: CSharpPlus.StringExtensions.RemoveNonDigit(String)
  name.vb: RemoveNonDigit(String)
- uid: CSharpPlus.StringExtensions.RemoveNonDigitOrLetter(System.String)
  commentId: M:CSharpPlus.StringExtensions.RemoveNonDigitOrLetter(System.String)
  id: RemoveNonDigitOrLetter(System.String)
  isExtensionMethod: true
  parent: CSharpPlus.StringExtensions
  langs:
  - csharp
  - vb
  name: RemoveNonDigitOrLetter(string)
  nameWithType: StringExtensions.RemoveNonDigitOrLetter(string)
  fullName: CSharpPlus.StringExtensions.RemoveNonDigitOrLetter(string)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/StringExtensions.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Remove all non digit or letter characters
  example: []
  syntax:
    content: public static string RemoveNonDigitOrLetter(this string value)
    parameters:
    - id: value
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function RemoveNonDigitOrLetter(value As String) As String
  overload: CSharpPlus.StringExtensions.RemoveNonDigitOrLetter*
  nameWithType.vb: StringExtensions.RemoveNonDigitOrLetter(String)
  fullName.vb: CSharpPlus.StringExtensions.RemoveNonDigitOrLetter(String)
  name.vb: RemoveNonDigitOrLetter(String)
- uid: CSharpPlus.StringExtensions.GetStableHashCode(System.String)
  commentId: M:CSharpPlus.StringExtensions.GetStableHashCode(System.String)
  id: GetStableHashCode(System.String)
  isExtensionMethod: true
  parent: CSharpPlus.StringExtensions
  langs:
  - csharp
  - vb
  name: GetStableHashCode(string)
  nameWithType: StringExtensions.GetStableHashCode(string)
  fullName: CSharpPlus.StringExtensions.GetStableHashCode(string)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/StringExtensions.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Returns a persistent hashcode for the string
  example: []
  syntax:
    content: public static int GetStableHashCode(this string str)
    parameters:
    - id: str
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Shared Function GetStableHashCode(str As String) As Integer
  overload: CSharpPlus.StringExtensions.GetStableHashCode*
  nameWithType.vb: StringExtensions.GetStableHashCode(String)
  fullName.vb: CSharpPlus.StringExtensions.GetStableHashCode(String)
  name.vb: GetStableHashCode(String)
references:
- uid: CSharpPlus
  commentId: N:CSharpPlus
  isExternal: true
  href: CSharpPlus.html
  name: CSharpPlus
  nameWithType: CSharpPlus
  fullName: CSharpPlus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CSharpPlus.StringExtensions.IsNullOrEmpty*
  commentId: Overload:CSharpPlus.StringExtensions.IsNullOrEmpty
  isExternal: true
  href: CSharpPlus.StringExtensions.html#CSharpPlus_StringExtensions_IsNullOrEmpty_System_String_
  name: IsNullOrEmpty
  nameWithType: StringExtensions.IsNullOrEmpty
  fullName: CSharpPlus.StringExtensions.IsNullOrEmpty
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CSharpPlus.StringExtensions.IsNullOrWhiteSpace*
  commentId: Overload:CSharpPlus.StringExtensions.IsNullOrWhiteSpace
  isExternal: true
  href: CSharpPlus.StringExtensions.html#CSharpPlus_StringExtensions_IsNullOrWhiteSpace_System_String_
  name: IsNullOrWhiteSpace
  nameWithType: StringExtensions.IsNullOrWhiteSpace
  fullName: CSharpPlus.StringExtensions.IsNullOrWhiteSpace
- uid: CSharpPlus.StringExtensions.RemoveNonDigit*
  commentId: Overload:CSharpPlus.StringExtensions.RemoveNonDigit
  isExternal: true
  href: CSharpPlus.StringExtensions.html#CSharpPlus_StringExtensions_RemoveNonDigit_System_String_
  name: RemoveNonDigit
  nameWithType: StringExtensions.RemoveNonDigit
  fullName: CSharpPlus.StringExtensions.RemoveNonDigit
- uid: CSharpPlus.StringExtensions.RemoveNonDigitOrLetter*
  commentId: Overload:CSharpPlus.StringExtensions.RemoveNonDigitOrLetter
  isExternal: true
  href: CSharpPlus.StringExtensions.html#CSharpPlus_StringExtensions_RemoveNonDigitOrLetter_System_String_
  name: RemoveNonDigitOrLetter
  nameWithType: StringExtensions.RemoveNonDigitOrLetter
  fullName: CSharpPlus.StringExtensions.RemoveNonDigitOrLetter
- uid: CSharpPlus.StringExtensions.GetStableHashCode*
  commentId: Overload:CSharpPlus.StringExtensions.GetStableHashCode
  isExternal: true
  href: CSharpPlus.StringExtensions.html#CSharpPlus_StringExtensions_GetStableHashCode_System_String_
  name: GetStableHashCode
  nameWithType: StringExtensions.GetStableHashCode
  fullName: CSharpPlus.StringExtensions.GetStableHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
