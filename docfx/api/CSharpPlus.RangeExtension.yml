### YamlMime:ManagedReference
items:
- uid: CSharpPlus.RangeExtension
  commentId: T:CSharpPlus.RangeExtension
  id: RangeExtension
  parent: CSharpPlus
  children:
  - CSharpPlus.RangeExtension.Enumerate(System.Range)
  - CSharpPlus.RangeExtension.GetBounds(System.Range)
  - CSharpPlus.RangeExtension.GetEnumerator(System.Range)
  - CSharpPlus.RangeExtension.SelectMany(System.Range,System.Func{System.Int32,System.Range})
  - CSharpPlus.RangeExtension.SelectMany``1(System.Range,System.Func{System.Int32,System.Collections.Generic.IEnumerable{``0}})
  - CSharpPlus.RangeExtension.SelectMany``1(System.Range,System.Func{System.Int32,System.Range},System.Func{System.Int32,System.Int32,``0})
  - CSharpPlus.RangeExtension.SelectMany``2(System.Range,System.Func{System.Int32,System.Collections.Generic.IEnumerable{``0}},System.Func{System.Int32,``0,``1})
  - CSharpPlus.RangeExtension.Select``1(System.Range,System.Func{System.Int32,``0})
  - CSharpPlus.RangeExtension.ToArray(System.Range)
  - CSharpPlus.RangeExtension.ToList(System.Range)
  - CSharpPlus.RangeExtension.ToReadOnly(System.Range)
  langs:
  - csharp
  - vb
  name: RangeExtension
  nameWithType: RangeExtension
  fullName: CSharpPlus.RangeExtension
  type: Class
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/RangeExtension.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Range extensions
  example: []
  syntax:
    content: public static class RangeExtension
    content.vb: Public Module RangeExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: CSharpPlus.RangeExtension.GetBounds(System.Range)
  commentId: M:CSharpPlus.RangeExtension.GetBounds(System.Range)
  id: GetBounds(System.Range)
  isExtensionMethod: true
  parent: CSharpPlus.RangeExtension
  langs:
  - csharp
  - vb
  name: GetBounds(Range)
  nameWithType: RangeExtension.GetBounds(Range)
  fullName: CSharpPlus.RangeExtension.GetBounds(System.Range)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/RangeExtension.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: >-
    Enumerate Range operators

    ^ sets the value as exclusive
  example: []
  syntax:
    content: public static (int Sign, int Start, int End) GetBounds(this Range range)
    parameters:
    - id: range
      type: System.Range
      description: ''
    return:
      type: System.ValueTuple{System.Int32,System.Int32,System.Int32}
      description: ''
    content.vb: Public Shared Function GetBounds(range As Range) As (Sign As Integer, Start As Integer, [End] As Integer)
  overload: CSharpPlus.RangeExtension.GetBounds*
- uid: CSharpPlus.RangeExtension.GetEnumerator(System.Range)
  commentId: M:CSharpPlus.RangeExtension.GetEnumerator(System.Range)
  id: GetEnumerator(System.Range)
  isExtensionMethod: true
  parent: CSharpPlus.RangeExtension
  langs:
  - csharp
  - vb
  name: GetEnumerator(Range)
  nameWithType: RangeExtension.GetEnumerator(Range)
  fullName: CSharpPlus.RangeExtension.GetEnumerator(System.Range)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/RangeExtension.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: >-
    Enumerate Range operators

    ^ sets the value as exclusive
  example: []
  syntax:
    content: public static IEnumerator<int> GetEnumerator(this Range range)
    parameters:
    - id: range
      type: System.Range
      description: ''
    return:
      type: System.Collections.Generic.IEnumerator{System.Int32}
      description: ''
    content.vb: Public Shared Function GetEnumerator(range As Range) As IEnumerator(Of Integer)
  overload: CSharpPlus.RangeExtension.GetEnumerator*
- uid: CSharpPlus.RangeExtension.Enumerate(System.Range)
  commentId: M:CSharpPlus.RangeExtension.Enumerate(System.Range)
  id: Enumerate(System.Range)
  isExtensionMethod: true
  parent: CSharpPlus.RangeExtension
  langs:
  - csharp
  - vb
  name: Enumerate(Range)
  nameWithType: RangeExtension.Enumerate(Range)
  fullName: CSharpPlus.RangeExtension.Enumerate(System.Range)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/RangeExtension.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Enumerable Range
  example: []
  syntax:
    content: public static IEnumerable<int> Enumerate(this Range range)
    parameters:
    - id: range
      type: System.Range
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: ''
    content.vb: Public Shared Function Enumerate(range As Range) As IEnumerable(Of Integer)
  overload: CSharpPlus.RangeExtension.Enumerate*
- uid: CSharpPlus.RangeExtension.ToArray(System.Range)
  commentId: M:CSharpPlus.RangeExtension.ToArray(System.Range)
  id: ToArray(System.Range)
  isExtensionMethod: true
  parent: CSharpPlus.RangeExtension
  langs:
  - csharp
  - vb
  name: ToArray(Range)
  nameWithType: RangeExtension.ToArray(Range)
  fullName: CSharpPlus.RangeExtension.ToArray(System.Range)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/RangeExtension.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Creates an array from a Range
  example: []
  syntax:
    content: public static int[] ToArray(this Range range)
    parameters:
    - id: range
      type: System.Range
    return:
      type: System.Int32[]
      description: ''
    content.vb: Public Shared Function ToArray(range As Range) As Integer()
  overload: CSharpPlus.RangeExtension.ToArray*
- uid: CSharpPlus.RangeExtension.Select``1(System.Range,System.Func{System.Int32,``0})
  commentId: M:CSharpPlus.RangeExtension.Select``1(System.Range,System.Func{System.Int32,``0})
  id: Select``1(System.Range,System.Func{System.Int32,``0})
  isExtensionMethod: true
  parent: CSharpPlus.RangeExtension
  langs:
  - csharp
  - vb
  name: Select<TMap>(Range, Func<int, TMap>)
  nameWithType: RangeExtension.Select<TMap>(Range, Func<int, TMap>)
  fullName: CSharpPlus.RangeExtension.Select<TMap>(System.Range, System.Func<int, TMap>)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/RangeExtension.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Map Enumerate int
  example: []
  syntax:
    content: public static IEnumerable<TMap> Select<TMap>(this Range range, Func<int, TMap> map)
    parameters:
    - id: range
      type: System.Range
      description: ''
    - id: map
      type: System.Func{System.Int32,{TMap}}
      description: ''
    typeParameters:
    - id: TMap
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{{TMap}}
      description: ''
    content.vb: Public Shared Function [Select](Of TMap)(range As Range, map As Func(Of Integer, TMap)) As IEnumerable(Of TMap)
  overload: CSharpPlus.RangeExtension.Select*
  nameWithType.vb: RangeExtension.Select(Of TMap)(Range, Func(Of Integer, TMap))
  fullName.vb: CSharpPlus.RangeExtension.Select(Of TMap)(System.Range, System.Func(Of Integer, TMap))
  name.vb: Select(Of TMap)(Range, Func(Of Integer, TMap))
- uid: CSharpPlus.RangeExtension.SelectMany``2(System.Range,System.Func{System.Int32,System.Collections.Generic.IEnumerable{``0}},System.Func{System.Int32,``0,``1})
  commentId: M:CSharpPlus.RangeExtension.SelectMany``2(System.Range,System.Func{System.Int32,System.Collections.Generic.IEnumerable{``0}},System.Func{System.Int32,``0,``1})
  id: SelectMany``2(System.Range,System.Func{System.Int32,System.Collections.Generic.IEnumerable{``0}},System.Func{System.Int32,``0,``1})
  isExtensionMethod: true
  parent: CSharpPlus.RangeExtension
  langs:
  - csharp
  - vb
  name: SelectMany<TMap, TResult>(Range, Func<int, IEnumerable<TMap>>, Func<int, TMap, TResult>)
  nameWithType: RangeExtension.SelectMany<TMap, TResult>(Range, Func<int, IEnumerable<TMap>>, Func<int, TMap, TResult>)
  fullName: CSharpPlus.RangeExtension.SelectMany<TMap, TResult>(System.Range, System.Func<int, System.Collections.Generic.IEnumerable<TMap>>, System.Func<int, TMap, TResult>)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/RangeExtension.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Int Bind Projection
  example: []
  syntax:
    content: public static IEnumerable<TResult> SelectMany<TMap, TResult>(this Range range, Func<int, IEnumerable<TMap>> projection, Func<int, TMap, TResult> project)
    parameters:
    - id: range
      type: System.Range
      description: ''
    - id: projection
      type: System.Func{System.Int32,System.Collections.Generic.IEnumerable{{TMap}}}
      description: ''
    - id: project
      type: System.Func{System.Int32,{TMap},{TResult}}
      description: ''
    typeParameters:
    - id: TMap
      description: ''
    - id: TResult
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
      description: ''
    content.vb: Public Shared Function SelectMany(Of TMap, TResult)(range As Range, projection As Func(Of Integer, IEnumerable(Of TMap)), project As Func(Of Integer, TMap, TResult)) As IEnumerable(Of TResult)
  overload: CSharpPlus.RangeExtension.SelectMany*
  nameWithType.vb: RangeExtension.SelectMany(Of TMap, TResult)(Range, Func(Of Integer, IEnumerable(Of TMap)), Func(Of Integer, TMap, TResult))
  fullName.vb: CSharpPlus.RangeExtension.SelectMany(Of TMap, TResult)(System.Range, System.Func(Of Integer, System.Collections.Generic.IEnumerable(Of TMap)), System.Func(Of Integer, TMap, TResult))
  name.vb: SelectMany(Of TMap, TResult)(Range, Func(Of Integer, IEnumerable(Of TMap)), Func(Of Integer, TMap, TResult))
- uid: CSharpPlus.RangeExtension.SelectMany``1(System.Range,System.Func{System.Int32,System.Collections.Generic.IEnumerable{``0}})
  commentId: M:CSharpPlus.RangeExtension.SelectMany``1(System.Range,System.Func{System.Int32,System.Collections.Generic.IEnumerable{``0}})
  id: SelectMany``1(System.Range,System.Func{System.Int32,System.Collections.Generic.IEnumerable{``0}})
  isExtensionMethod: true
  parent: CSharpPlus.RangeExtension
  langs:
  - csharp
  - vb
  name: SelectMany<TResult>(Range, Func<int, IEnumerable<TResult>>)
  nameWithType: RangeExtension.SelectMany<TResult>(Range, Func<int, IEnumerable<TResult>>)
  fullName: CSharpPlus.RangeExtension.SelectMany<TResult>(System.Range, System.Func<int, System.Collections.Generic.IEnumerable<TResult>>)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/RangeExtension.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Int Bind Projection
  example: []
  syntax:
    content: public static IEnumerable<TResult> SelectMany<TResult>(this Range range, Func<int, IEnumerable<TResult>> projection)
    parameters:
    - id: range
      type: System.Range
      description: ''
    - id: projection
      type: System.Func{System.Int32,System.Collections.Generic.IEnumerable{{TResult}}}
      description: ''
    typeParameters:
    - id: TResult
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
      description: ''
    content.vb: Public Shared Function SelectMany(Of TResult)(range As Range, projection As Func(Of Integer, IEnumerable(Of TResult))) As IEnumerable(Of TResult)
  overload: CSharpPlus.RangeExtension.SelectMany*
  nameWithType.vb: RangeExtension.SelectMany(Of TResult)(Range, Func(Of Integer, IEnumerable(Of TResult)))
  fullName.vb: CSharpPlus.RangeExtension.SelectMany(Of TResult)(System.Range, System.Func(Of Integer, System.Collections.Generic.IEnumerable(Of TResult)))
  name.vb: SelectMany(Of TResult)(Range, Func(Of Integer, IEnumerable(Of TResult)))
- uid: CSharpPlus.RangeExtension.SelectMany``1(System.Range,System.Func{System.Int32,System.Range},System.Func{System.Int32,System.Int32,``0})
  commentId: M:CSharpPlus.RangeExtension.SelectMany``1(System.Range,System.Func{System.Int32,System.Range},System.Func{System.Int32,System.Int32,``0})
  id: SelectMany``1(System.Range,System.Func{System.Int32,System.Range},System.Func{System.Int32,System.Int32,``0})
  isExtensionMethod: true
  parent: CSharpPlus.RangeExtension
  langs:
  - csharp
  - vb
  name: SelectMany<TResult>(Range, Func<int, Range>, Func<int, int, TResult>)
  nameWithType: RangeExtension.SelectMany<TResult>(Range, Func<int, Range>, Func<int, int, TResult>)
  fullName: CSharpPlus.RangeExtension.SelectMany<TResult>(System.Range, System.Func<int, System.Range>, System.Func<int, int, TResult>)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/RangeExtension.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Range Bind Projection
  example: []
  syntax:
    content: public static IEnumerable<TResult> SelectMany<TResult>(this Range range, Func<int, Range> projection, Func<int, int, TResult> project)
    parameters:
    - id: range
      type: System.Range
      description: ''
    - id: projection
      type: System.Func{System.Int32,System.Range}
      description: ''
    - id: project
      type: System.Func{System.Int32,System.Int32,{TResult}}
      description: ''
    typeParameters:
    - id: TResult
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
      description: ''
    content.vb: Public Shared Function SelectMany(Of TResult)(range As Range, projection As Func(Of Integer, Range), project As Func(Of Integer, Integer, TResult)) As IEnumerable(Of TResult)
  overload: CSharpPlus.RangeExtension.SelectMany*
  nameWithType.vb: RangeExtension.SelectMany(Of TResult)(Range, Func(Of Integer, Range), Func(Of Integer, Integer, TResult))
  fullName.vb: CSharpPlus.RangeExtension.SelectMany(Of TResult)(System.Range, System.Func(Of Integer, System.Range), System.Func(Of Integer, Integer, TResult))
  name.vb: SelectMany(Of TResult)(Range, Func(Of Integer, Range), Func(Of Integer, Integer, TResult))
- uid: CSharpPlus.RangeExtension.SelectMany(System.Range,System.Func{System.Int32,System.Range})
  commentId: M:CSharpPlus.RangeExtension.SelectMany(System.Range,System.Func{System.Int32,System.Range})
  id: SelectMany(System.Range,System.Func{System.Int32,System.Range})
  isExtensionMethod: true
  parent: CSharpPlus.RangeExtension
  langs:
  - csharp
  - vb
  name: SelectMany(Range, Func<int, Range>)
  nameWithType: RangeExtension.SelectMany(Range, Func<int, Range>)
  fullName: CSharpPlus.RangeExtension.SelectMany(System.Range, System.Func<int, System.Range>)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/RangeExtension.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Range Bind Projection
  example: []
  syntax:
    content: public static IEnumerable<int> SelectMany(this Range range, Func<int, Range> projection)
    parameters:
    - id: range
      type: System.Range
      description: ''
    - id: projection
      type: System.Func{System.Int32,System.Range}
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: ''
    content.vb: Public Shared Function SelectMany(range As Range, projection As Func(Of Integer, Range)) As IEnumerable(Of Integer)
  overload: CSharpPlus.RangeExtension.SelectMany*
  nameWithType.vb: RangeExtension.SelectMany(Range, Func(Of Integer, Range))
  fullName.vb: CSharpPlus.RangeExtension.SelectMany(System.Range, System.Func(Of Integer, System.Range))
  name.vb: SelectMany(Range, Func(Of Integer, Range))
- uid: CSharpPlus.RangeExtension.ToList(System.Range)
  commentId: M:CSharpPlus.RangeExtension.ToList(System.Range)
  id: ToList(System.Range)
  isExtensionMethod: true
  parent: CSharpPlus.RangeExtension
  langs:
  - csharp
  - vb
  name: ToList(Range)
  nameWithType: RangeExtension.ToList(Range)
  fullName: CSharpPlus.RangeExtension.ToList(System.Range)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/RangeExtension.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Creates an List from a Range
  example: []
  syntax:
    content: public static List<int> ToList(this Range range)
    parameters:
    - id: range
      type: System.Range
    return:
      type: System.Collections.Generic.List{System.Int32}
      description: ''
    content.vb: Public Shared Function ToList(range As Range) As List(Of Integer)
  overload: CSharpPlus.RangeExtension.ToList*
- uid: CSharpPlus.RangeExtension.ToReadOnly(System.Range)
  commentId: M:CSharpPlus.RangeExtension.ToReadOnly(System.Range)
  id: ToReadOnly(System.Range)
  isExtensionMethod: true
  parent: CSharpPlus.RangeExtension
  langs:
  - csharp
  - vb
  name: ToReadOnly(Range)
  nameWithType: RangeExtension.ToReadOnly(Range)
  fullName: CSharpPlus.RangeExtension.ToReadOnly(System.Range)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/RangeExtension.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Creates an array from a Range
  example: []
  syntax:
    content: public static IReadOnlyCollection<int> ToReadOnly(this Range range)
    parameters:
    - id: range
      type: System.Range
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.Int32}
      description: ''
    content.vb: Public Shared Function ToReadOnly(range As Range) As IReadOnlyCollection(Of Integer)
  overload: CSharpPlus.RangeExtension.ToReadOnly*
references:
- uid: CSharpPlus
  commentId: N:CSharpPlus
  isExternal: true
  href: CSharpPlus.html
  name: CSharpPlus
  nameWithType: CSharpPlus
  fullName: CSharpPlus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CSharpPlus.RangeExtension.GetBounds*
  commentId: Overload:CSharpPlus.RangeExtension.GetBounds
  isExternal: true
  href: CSharpPlus.RangeExtension.html#CSharpPlus_RangeExtension_GetBounds_System_Range_
  name: GetBounds
  nameWithType: RangeExtension.GetBounds
  fullName: CSharpPlus.RangeExtension.GetBounds
- uid: System.Range
  commentId: T:System.Range
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.range
  name: Range
  nameWithType: Range
  fullName: System.Range
- uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`3
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int Sign, int Start, int End)
  nameWithType: (int Sign, int Start, int End)
  fullName: (int Sign, int Start, int End)
  nameWithType.vb: (Sign As Integer, Start As Integer, End As Integer)
  fullName.vb: (Sign As Integer, Start As Integer, End As Integer)
  name.vb: (Sign As Integer, Start As Integer, End As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.Sign
    name: Sign
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.sign
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.Start
    name: Start
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.start
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.End
    name: End
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.end
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.Sign
    name: Sign
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.sign
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.Start
    name: Start
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.start
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.End
    name: End
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.end
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: CSharpPlus.RangeExtension.GetEnumerator*
  commentId: Overload:CSharpPlus.RangeExtension.GetEnumerator
  isExternal: true
  href: CSharpPlus.RangeExtension.html#CSharpPlus_RangeExtension_GetEnumerator_System_Range_
  name: GetEnumerator
  nameWithType: RangeExtension.GetEnumerator
  fullName: CSharpPlus.RangeExtension.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerator{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<int>
  nameWithType: IEnumerator<int>
  fullName: System.Collections.Generic.IEnumerator<int>
  nameWithType.vb: IEnumerator(Of Integer)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Integer)
  name.vb: IEnumerator(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: CSharpPlus.RangeExtension.Enumerate*
  commentId: Overload:CSharpPlus.RangeExtension.Enumerate
  isExternal: true
  href: CSharpPlus.RangeExtension.html#CSharpPlus_RangeExtension_Enumerate_System_Range_
  name: Enumerate
  nameWithType: RangeExtension.Enumerate
  fullName: CSharpPlus.RangeExtension.Enumerate
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<int>
  nameWithType: IEnumerable<int>
  fullName: System.Collections.Generic.IEnumerable<int>
  nameWithType.vb: IEnumerable(Of Integer)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Integer)
  name.vb: IEnumerable(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: CSharpPlus.RangeExtension.ToArray*
  commentId: Overload:CSharpPlus.RangeExtension.ToArray
  isExternal: true
  href: CSharpPlus.RangeExtension.html#CSharpPlus_RangeExtension_ToArray_System_Range_
  name: ToArray
  nameWithType: RangeExtension.ToArray
  fullName: CSharpPlus.RangeExtension.ToArray
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: CSharpPlus.RangeExtension.Select*
  commentId: Overload:CSharpPlus.RangeExtension.Select
  isExternal: true
  href: CSharpPlus.RangeExtension.html#CSharpPlus_RangeExtension_Select__1_System_Range_System_Func_System_Int32___0__
  name: Select
  nameWithType: RangeExtension.Select
  fullName: CSharpPlus.RangeExtension.Select
- uid: System.Func{System.Int32,{TMap}}
  commentId: T:System.Func{System.Int32,``0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<int, TMap>
  nameWithType: Func<int, TMap>
  fullName: System.Func<int, TMap>
  nameWithType.vb: Func(Of Integer, TMap)
  fullName.vb: System.Func(Of Integer, TMap)
  name.vb: Func(Of Integer, TMap)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TMap
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TMap
  - name: )
- uid: System.Collections.Generic.IEnumerable{{TMap}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TMap>
  nameWithType: IEnumerable<TMap>
  fullName: System.Collections.Generic.IEnumerable<TMap>
  nameWithType.vb: IEnumerable(Of TMap)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TMap)
  name.vb: IEnumerable(Of TMap)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TMap
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TMap
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: CSharpPlus.RangeExtension.SelectMany*
  commentId: Overload:CSharpPlus.RangeExtension.SelectMany
  isExternal: true
  href: CSharpPlus.RangeExtension.html#CSharpPlus_RangeExtension_SelectMany__2_System_Range_System_Func_System_Int32_System_Collections_Generic_IEnumerable___0___System_Func_System_Int32___0___1__
  name: SelectMany
  nameWithType: RangeExtension.SelectMany
  fullName: CSharpPlus.RangeExtension.SelectMany
- uid: System.Func{System.Int32,System.Collections.Generic.IEnumerable{{TMap}}}
  commentId: T:System.Func{System.Int32,System.Collections.Generic.IEnumerable{``0}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<int, IEnumerable<TMap>>
  nameWithType: Func<int, IEnumerable<TMap>>
  fullName: System.Func<int, System.Collections.Generic.IEnumerable<TMap>>
  nameWithType.vb: Func(Of Integer, IEnumerable(Of TMap))
  fullName.vb: System.Func(Of Integer, System.Collections.Generic.IEnumerable(Of TMap))
  name.vb: Func(Of Integer, IEnumerable(Of TMap))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TMap
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TMap
  - name: )
  - name: )
- uid: System.Func{System.Int32,{TMap},{TResult}}
  commentId: T:System.Func{System.Int32,``0,``1}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<int, TMap, TResult>
  nameWithType: Func<int, TMap, TResult>
  fullName: System.Func<int, TMap, TResult>
  nameWithType.vb: Func(Of Integer, TMap, TResult)
  fullName.vb: System.Func(Of Integer, TMap, TResult)
  name.vb: Func(Of Integer, TMap, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TMap
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TMap
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Collections.Generic.IEnumerable{{TResult}}
  commentId: T:System.Collections.Generic.IEnumerable{``1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TResult>
  nameWithType: IEnumerable<TResult>
  fullName: System.Collections.Generic.IEnumerable<TResult>
  nameWithType.vb: IEnumerable(Of TResult)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TResult)
  name.vb: IEnumerable(Of TResult)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{System.Int32,System.Collections.Generic.IEnumerable{{TResult}}}
  commentId: T:System.Func{System.Int32,System.Collections.Generic.IEnumerable{``0}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<int, IEnumerable<TResult>>
  nameWithType: Func<int, IEnumerable<TResult>>
  fullName: System.Func<int, System.Collections.Generic.IEnumerable<TResult>>
  nameWithType.vb: Func(Of Integer, IEnumerable(Of TResult))
  fullName.vb: System.Func(Of Integer, System.Collections.Generic.IEnumerable(Of TResult))
  name.vb: Func(Of Integer, IEnumerable(Of TResult))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TResult
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: )
- uid: System.Func{System.Int32,System.Range}
  commentId: T:System.Func{System.Int32,System.Range}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<int, Range>
  nameWithType: Func<int, Range>
  fullName: System.Func<int, System.Range>
  nameWithType.vb: Func(Of Integer, Range)
  fullName.vb: System.Func(Of Integer, System.Range)
  name.vb: Func(Of Integer, Range)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Range
    name: Range
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.range
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Range
    name: Range
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.range
  - name: )
- uid: System.Func{System.Int32,System.Int32,{TResult}}
  commentId: T:System.Func{System.Int32,System.Int32,``0}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<int, int, TResult>
  nameWithType: Func<int, int, TResult>
  fullName: System.Func<int, int, TResult>
  nameWithType.vb: Func(Of Integer, Integer, TResult)
  fullName.vb: System.Func(Of Integer, Integer, TResult)
  name.vb: Func(Of Integer, Integer, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: CSharpPlus.RangeExtension.ToList*
  commentId: Overload:CSharpPlus.RangeExtension.ToList
  isExternal: true
  href: CSharpPlus.RangeExtension.html#CSharpPlus_RangeExtension_ToList_System_Range_
  name: ToList
  nameWithType: RangeExtension.ToList
  fullName: CSharpPlus.RangeExtension.ToList
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<int>
  nameWithType: List<int>
  fullName: System.Collections.Generic.List<int>
  nameWithType.vb: List(Of Integer)
  fullName.vb: System.Collections.Generic.List(Of Integer)
  name.vb: List(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: CSharpPlus.RangeExtension.ToReadOnly*
  commentId: Overload:CSharpPlus.RangeExtension.ToReadOnly
  isExternal: true
  href: CSharpPlus.RangeExtension.html#CSharpPlus_RangeExtension_ToReadOnly_System_Range_
  name: ToReadOnly
  nameWithType: RangeExtension.ToReadOnly
  fullName: CSharpPlus.RangeExtension.ToReadOnly
- uid: System.Collections.Generic.IReadOnlyCollection{System.Int32}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<int>
  nameWithType: IReadOnlyCollection<int>
  fullName: System.Collections.Generic.IReadOnlyCollection<int>
  nameWithType.vb: IReadOnlyCollection(Of Integer)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Integer)
  name.vb: IReadOnlyCollection(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
