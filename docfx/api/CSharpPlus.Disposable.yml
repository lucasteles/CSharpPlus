### YamlMime:ManagedReference
items:
- uid: CSharpPlus.Disposable
  commentId: T:CSharpPlus.Disposable
  id: Disposable
  parent: CSharpPlus
  children:
  - CSharpPlus.Disposable.Defer(System.Action)
  - CSharpPlus.Disposable.Defer(System.Func{System.Threading.Tasks.ValueTask})
  langs:
  - csharp
  - vb
  name: Disposable
  nameWithType: Disposable
  fullName: CSharpPlus.Disposable
  type: Class
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/Disposable.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Disposable static functions
  example: []
  syntax:
    content: public static class Disposable
    content.vb: Public Module Disposable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
- uid: CSharpPlus.Disposable.Defer(System.Action)
  commentId: M:CSharpPlus.Disposable.Defer(System.Action)
  id: Defer(System.Action)
  parent: CSharpPlus.Disposable
  langs:
  - csharp
  - vb
  name: Defer(Action)
  nameWithType: Disposable.Defer(Action)
  fullName: CSharpPlus.Disposable.Defer(System.Action)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/Disposable.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Defer action execution with Dispose
  example: []
  syntax:
    content: public static Disposable.Deferred Defer(Action action)
    parameters:
    - id: action
      type: System.Action
    return:
      type: CSharpPlus.Disposable.Deferred
    content.vb: Public Shared Function Defer(action As Action) As Disposable.Deferred
  overload: CSharpPlus.Disposable.Defer*
- uid: CSharpPlus.Disposable.Defer(System.Func{System.Threading.Tasks.ValueTask})
  commentId: M:CSharpPlus.Disposable.Defer(System.Func{System.Threading.Tasks.ValueTask})
  id: Defer(System.Func{System.Threading.Tasks.ValueTask})
  parent: CSharpPlus.Disposable
  langs:
  - csharp
  - vb
  name: Defer(Func<ValueTask>)
  nameWithType: Disposable.Defer(Func<ValueTask>)
  fullName: CSharpPlus.Disposable.Defer(System.Func<System.Threading.Tasks.ValueTask>)
  type: Method
  source:
    href: https://github.com/lucasteles/CSharpPlus/blob/master/src/Disposable.cs
  assemblies:
  - CSharpPlus
  namespace: CSharpPlus
  summary: Defer async action execution with DisposeAsync
  example: []
  syntax:
    content: public static Disposable.DeferredTask Defer(Func<ValueTask> action)
    parameters:
    - id: action
      type: System.Func{System.Threading.Tasks.ValueTask}
    return:
      type: CSharpPlus.Disposable.DeferredTask
    content.vb: Public Shared Function Defer(action As Func(Of ValueTask)) As Disposable.DeferredTask
  overload: CSharpPlus.Disposable.Defer*
  nameWithType.vb: Disposable.Defer(Func(Of ValueTask))
  fullName.vb: CSharpPlus.Disposable.Defer(System.Func(Of System.Threading.Tasks.ValueTask))
  name.vb: Defer(Func(Of ValueTask))
references:
- uid: CSharpPlus
  commentId: N:CSharpPlus
  isExternal: true
  href: CSharpPlus.html
  name: CSharpPlus
  nameWithType: CSharpPlus
  fullName: CSharpPlus
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CSharpPlus.Disposable.Defer*
  commentId: Overload:CSharpPlus.Disposable.Defer
  isExternal: true
  href: CSharpPlus.Disposable.html#CSharpPlus_Disposable_Defer_System_Action_
  name: Defer
  nameWithType: Disposable.Defer
  fullName: CSharpPlus.Disposable.Defer
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: CSharpPlus.Disposable.Deferred
  commentId: T:CSharpPlus.Disposable.Deferred
  parent: CSharpPlus
  isExternal: true
  href: CSharpPlus.Disposable.html
  name: Disposable.Deferred
  nameWithType: Disposable.Deferred
  fullName: CSharpPlus.Disposable.Deferred
  spec.csharp:
  - uid: CSharpPlus.Disposable
    name: Disposable
    isExternal: true
    href: CSharpPlus.Disposable.html
  - name: .
  - uid: CSharpPlus.Disposable.Deferred
    name: Deferred
    isExternal: true
    href: CSharpPlus.Disposable.Deferred.html
  spec.vb:
  - uid: CSharpPlus.Disposable
    name: Disposable
    isExternal: true
    href: CSharpPlus.Disposable.html
  - name: .
  - uid: CSharpPlus.Disposable.Deferred
    name: Deferred
    isExternal: true
    href: CSharpPlus.Disposable.Deferred.html
- uid: System.Func{System.Threading.Tasks.ValueTask}
  commentId: T:System.Func{System.Threading.Tasks.ValueTask}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<ValueTask>
  nameWithType: Func<ValueTask>
  fullName: System.Func<System.Threading.Tasks.ValueTask>
  nameWithType.vb: Func(Of ValueTask)
  fullName.vb: System.Func(Of System.Threading.Tasks.ValueTask)
  name.vb: Func(Of ValueTask)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Threading.Tasks.ValueTask
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.ValueTask
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask
  - name: )
- uid: CSharpPlus.Disposable.DeferredTask
  commentId: T:CSharpPlus.Disposable.DeferredTask
  parent: CSharpPlus
  isExternal: true
  href: CSharpPlus.Disposable.html
  name: Disposable.DeferredTask
  nameWithType: Disposable.DeferredTask
  fullName: CSharpPlus.Disposable.DeferredTask
  spec.csharp:
  - uid: CSharpPlus.Disposable
    name: Disposable
    isExternal: true
    href: CSharpPlus.Disposable.html
  - name: .
  - uid: CSharpPlus.Disposable.DeferredTask
    name: DeferredTask
    isExternal: true
    href: CSharpPlus.Disposable.DeferredTask.html
  spec.vb:
  - uid: CSharpPlus.Disposable
    name: Disposable
    isExternal: true
    href: CSharpPlus.Disposable.html
  - name: .
  - uid: CSharpPlus.Disposable.DeferredTask
    name: DeferredTask
    isExternal: true
    href: CSharpPlus.Disposable.DeferredTask.html
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
